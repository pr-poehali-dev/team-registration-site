<?php
/**
 * API –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∫–∞–ø–∏—Ç–∞–Ω–∞–º –∫–æ–º–∞–Ω–¥
 * –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –∏–∑ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ –∏–ª–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö
 */

header('Content-Type: application/json');
require_once __DIR__ . '/../php-backend/config.php';

$BOT_TOKEN = getenv('TELEGRAM_BOT_TOKEN') ?: '';

if (empty($BOT_TOKEN)) {
    http_response_code(500);
    echo json_encode(['error' => 'TELEGRAM_BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω']);
    exit;
}

$TELEGRAM_API = "https://api.telegram.org/bot{$BOT_TOKEN}";

/**
 * –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram
 */
function sendTelegramMessage($chat_id, $text, $parse_mode = 'HTML') {
    global $TELEGRAM_API;
    
    $data = [
        'chat_id' => $chat_id,
        'text' => $text,
        'parse_mode' => $parse_mode
    ];
    
    $ch = curl_init($TELEGRAM_API . '/sendMessage');
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    curl_setopt($ch, CURLOPT_POST, true);
    curl_setopt($ch, CURLOPT_POSTFIELDS, $data);
    curl_setopt($ch, CURLOPT_TIMEOUT, 10);
    
    $result = curl_exec($ch);
    $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
    curl_close($ch);
    
    return [
        'success' => $httpCode === 200,
        'response' => json_decode($result, true)
    ];
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å Telegram ID –∫–∞–ø–∏—Ç–∞–Ω–∞ –∫–æ–º–∞–Ω–¥—ã
 */
function getCaptainTelegramId($team_id) {
    global $conn;
    
    $stmt = $conn->prepare("SELECT captain_telegram_id FROM teams WHERE id = ?");
    $stmt->bind_param("i", $team_id);
    $stmt->execute();
    $result = $stmt->get_result();
    $team = $result->fetch_assoc();
    
    return $team['captain_telegram_id'] ?? null;
}

// –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å–∞
$method = $_SERVER['REQUEST_METHOD'];

if ($method === 'POST') {
    $input = json_decode(file_get_contents('php://input'), true);
    
    $notification_type = $input['type'] ?? '';
    $team_id = $input['team_id'] ?? null;
    $message = $input['message'] ?? '';
    $data = $input['data'] ?? [];
    
    if (empty($notification_type)) {
        http_response_code(400);
        echo json_encode(['error' => '–¢–∏–ø —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω–µ —É–∫–∞–∑–∞–Ω']);
        exit;
    }
    
    // –ü–æ–ª—É—á–∞–µ–º Telegram ID –∫–∞–ø–∏—Ç–∞–Ω–∞
    $telegram_id = getCaptainTelegramId($team_id);
    
    if (!$telegram_id) {
        http_response_code(404);
        echo json_encode(['error' => 'Telegram ID –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ –ø—Ä–∏–≤—è–∑–∞–Ω']);
        exit;
    }
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞
    $notification_text = '';
    
    switch ($notification_type) {
        case 'team_approved':
            $notification_text = "‚úÖ <b>–ö–æ–º–∞–Ω–¥–∞ –æ–¥–æ–±—Ä–µ–Ω–∞!</b>\n\n";
            $notification_text .= "–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ <b>{$data['team_name']}</b> –¥–æ–ø—É—â–µ–Ω–∞ –∫ —É—á–∞—Å—Ç–∏—é –≤ —Ç—É—Ä–Ω–∏—Ä–µ.\n\n";
            $notification_text .= "–°–ª–µ–¥–∏—Ç–µ –∑–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º –º–∞—Ç—á–µ–π –≤ –±–æ—Ç–µ.\n";
            $notification_text .= "–£–¥–∞—á–∏ –≤ —Ç—É—Ä–Ω–∏—Ä–µ! üèÜ";
            break;
            
        case 'team_rejected':
            $notification_text = "‚ùå <b>–ó–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞</b>\n\n";
            $notification_text .= "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –∑–∞—è–≤–∫–∞ –∫–æ–º–∞–Ω–¥—ã <b>{$data['team_name']}</b> –±—ã–ª–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞.\n\n";
            if (!empty($data['reason'])) {
                $notification_text .= "–ü—Ä–∏—á–∏–Ω–∞: {$data['reason']}\n\n";
            }
            $notification_text .= "–í—ã –º–æ–∂–µ—Ç–µ –ø–æ–¥–∞—Ç—å –Ω–æ–≤—É—é –∑–∞—è–≤–∫—É —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º–∏.";
            break;
            
        case 'match_created':
            $notification_text = "üéØ <b>–ù–æ–≤—ã–π –º–∞—Ç—á!</b>\n\n";
            $notification_text .= "–í–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ <b>{$data['team_name']}</b> –∏–≥—Ä–∞–µ—Ç:\n\n";
            $notification_text .= "‚öîÔ∏è {$data['team1']} vs {$data['team2']}\n";
            $notification_text .= "üèÖ –†–∞—É–Ω–¥: {$data['round']}\n";
            if (!empty($data['date'])) {
                $notification_text .= "üìÖ –î–∞—Ç–∞: {$data['date']}\n";
            }
            $notification_text .= "\n–£–¥–∞—á–∏ –≤ –º–∞—Ç—á–µ!";
            break;
            
        case 'match_updated':
            $notification_text = "üìä <b>–†–µ–∑—É–ª—å—Ç–∞—Ç –º–∞—Ç—á–∞</b>\n\n";
            $notification_text .= "‚öîÔ∏è {$data['team1']} vs {$data['team2']}\n";
            $notification_text .= "–°—á—ë—Ç: {$data['score1']} - {$data['score2']}\n\n";
            if ($data['is_winner']) {
                $notification_text .= "üèÜ <b>–ü–æ–±–µ–¥–∞!</b> –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!\n";
                $notification_text .= "–í—ã –ø—Ä–æ—Ö–æ–¥–∏—Ç–µ –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞—É–Ω–¥.";
            } else {
                $notification_text .= "üíî –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –ø–æ—Ä–∞–∂–µ–Ω–∏–µ.\n";
                $notification_text .= "–°–ø–∞—Å–∏–±–æ –∑–∞ —É—á–∞—Å—Ç–∏–µ –≤ —Ç—É—Ä–Ω–∏—Ä–µ!";
            }
            break;
            
        case 'custom':
            $notification_text = $message;
            break;
            
        default:
            http_response_code(400);
            echo json_encode(['error' => '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è']);
            exit;
    }
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    $result = sendTelegramMessage($telegram_id, $notification_text);
    
    if ($result['success']) {
        echo json_encode([
            'success' => true,
            'message' => '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ',
            'telegram_id' => $telegram_id
        ]);
    } else {
        http_response_code(500);
        echo json_encode([
            'error' => '–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è',
            'details' => $result['response']
        ]);
    }
    
} elseif ($method === 'GET') {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã API
    echo json_encode([
        'status' => 'ok',
        'message' => 'Notification API —Ä–∞–±–æ—Ç–∞–µ—Ç',
        'bot_configured' => !empty($BOT_TOKEN)
    ]);
} else {
    http_response_code(405);
    echo json_encode(['error' => '–ú–µ—Ç–æ–¥ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è']);
}
